[versions]
assertj = "3.24.2"
# @pin
aws2 = "2.19.33"
bouncycastle = "1.70"
dependencyAnalysisPlugin = "1.20.0"
docker = "3.3.0"
grpc = "1.55.1"
hoplite = "2.7.4"
# @pin
jackson = "2.14.2"
jnrUnixsocket = "0.38.19"
junit = "5.9.3"
kotest = "5.6.2"
# @pin
kotlin = "1.8.21"
kotlinBinaryCompatibilityPlugin = "0.13.1"
kotlinLogging = "3.0.5"
kotlinRetry = "1.0.9"
kotlinx = "1.7.0"
# @pin
launchDarkly = "5.10.7"
logback = "1.4.7"
# @pin
mavenPublishGradlePlugin = "0.23.2"
micrometer = "1.11.0"
mockito = "5.3.1"
moshi = "1.14.0"
netty = "4.1.92.Final"
okHttp = "4.11.0"
okio = "3.3.0"
openTracing = "0.33.0"
prometheus = "0.16.0"
protobufGradlePlugin = "0.9.3"
slf4j = "2.0.7"
versionCatalogUpdateGradlePlugin = "0.8.0"
versionsGradlePlugin = "0.46.0"

[libraries]
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
aws2Bom = { module = "software.amazon.awssdk:bom", version.ref = "aws2" }
bouncycastle = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bouncycastle" }
dockerCore = { module = "com.github.docker-java:docker-java-core", version.ref = "docker" }
dockerJavaApi = { module = "com.github.docker-java:docker-java-api", version.ref = "docker" }
dockerJavaTransport = { module = "com.github.docker-java:docker-java-transport", version.ref = "docker" }
dockerTransport = { module = "com.github.docker-java:docker-java-transport-httpclient5", version.ref = "docker" }
grpcBom = { module = "io.grpc:grpc-bom", version.ref = "grpc" }
hopliteCore = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hopliteHocon = { module = "com.sksamuel.hoplite:hoplite-hocon", version.ref = "hoplite" }
hopliteJson = { module = "com.sksamuel.hoplite:hoplite-json", version.ref = "hoplite" }
hopliteToml = { module = "com.sksamuel.hoplite:hoplite-toml", version.ref = "hoplite" }
hopliteYaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
jacksonBom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jnrUnixsocket = { module = "com.github.jnr:jnr-unixsocket", version.ref = "jnrUnixsocket" }
junitApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junitEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
kotestAssertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestAssertionsShared = { module = "io.kotest:kotest-assertions-shared", version.ref = "kotest" }
kotestCommon = { module = "io.kotest:kotest-common", version.ref = "kotest" }
kotestFrameworkApi = { module = "io.kotest:kotest-framework-api", version.ref = "kotest" }
kotestJunitRunnerJvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlinBom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlinRetry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version.ref = "kotlinRetry" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
launchDarkly = { module = "com.launchdarkly:launchdarkly-java-server-sdk", version.ref = "launchDarkly" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logbackCore = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
loggingApi = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
micrometerCore = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometerPrometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
moshiCore = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
nettyBom = { module = "io.netty:netty-bom", version.ref = "netty" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
openTracing = { module = "io.opentracing:opentracing-api", version.ref = "openTracing" }
openTracingMock = { module = "io.opentracing:opentracing-mock", version.ref = "openTracing" }
prometheusClient = { module = "io.prometheus:simpleclient", version.ref = "prometheus" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

[plugins]
dependencyAnalysisPlugin = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
kotlinBinaryCompatibilityPlugin = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityPlugin" }
kotlinGradlePlugin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
mavenPublishGradlePlugin = { id = "com.vanniktech.maven.publish.base", version.ref = "mavenPublishGradlePlugin" }
protobufGradlePlugin = { id = "com.google.protobuf", version.ref = "protobufGradlePlugin" }
versionCatalogUpdateGradlePlugin = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdateGradlePlugin" }
versionsGradlePlugin = { id = "com.github.ben-manes.versions", version.ref = "versionsGradlePlugin" }
